#################################################################
## SECTION: Deployment targets on a swarm cluster (locally on the manager server)
#################################################################
deployer_image := $(shell cat deployer-compose.yml | grep image | awk '{print $$2}')

DEPLOYER_SWARM_NAME := ub2
DEPLOYER_SWARM := docker service create \
	--name ub2 \
	--mode global-job \
	--mount type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock,readonly=true \
	--mount type=bind,source=/export/home/ria/.docker,destination=/root/.docker/,readonly=true \
	--mount type=bind,source=/RIA/ce-mtn-ng-delivery,destination=/deploy,readonly=false \
	--mount type=volume,source=ub2-seeds,destination=/seeds,readonly=false \
	--mount type=volume,source=ub2-config-store,destination=/data,readonly=false \
	--network ria \
	--restart-condition none \
	--constraint node.labels.server1==true \
	$(deployer_image)

swarm-ensure-service-inexistance:
	docker service rm $(DEPLOYER_SWARM_NAME) >/dev/null 2>&1 || true

swarm-check-logs:
	docker service logs $(DEPLOYER_SWARM_NAME)

swarm-deploy: swarm-ensure-ria-network swarm-ensure-service-inexistance ## Deploys in the swarm cluster
	$(DEPLOYER_SWARM) --configfile=/deploy/ub2.toml
	$(MAKE) swarm-check-logs

swarm-ensure-ria-network: ## Ensures the 'ria' docker network required for deployments in a swarm cluster exists
	docker network create -d overlay --attachable ria > /dev/null 2>&1 || true

swarm-clean-deployment: swarm-ensure-ria-network swarm-ensure-service-inexistance ## Resets a standalone deployment stack in a swarm cluster
	$(DEPLOYER_SWARM) -c
	$(MAKE) swarm-check-logs

swarm-clean-deployer: swarm-ensure-ria-network ## Resets a standalone deployer in a swarm cluster
	docker service rm $(DEPLOYER_SWARM_NAME)
	docker volume rm ub2-seeds ub2-config-store

swarm-clean: swarm-ensure-ria-network swarm-clean-deployment swarm-clean-deployer ## Fully resets a standalone deployment in a swarm cluster
	docker network rm ria
